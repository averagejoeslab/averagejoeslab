name: Security Scan

on:
  # Run on pushes to main branch
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'package*.json'
      - '.github/workflows/security-scan.yml'
  
  # Run on pull requests
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'package*.json'
      - '.github/workflows/security-scan.yml'
  
  # Run weekly to catch new vulnerabilities
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM UTC
  
  # Allow manual triggering
  workflow_dispatch:

jobs:
  security-scan:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write  # For uploading SARIF results
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: |
          docker build -t averagejoeslab-security-scan .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'averagejoeslab-security-scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Run Trivy scanner for PR comment
        uses: aquasecurity/trivy-action@master
        if: github.event_name == 'pull_request'
        with:
          image-ref: 'averagejoeslab-security-scan'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.txt'
      
      - name: Comment PR with scan results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let scanResults = '';
            
            try {
              scanResults = fs.readFileSync('trivy-results.txt', 'utf8');
            } catch (error) {
              scanResults = 'No HIGH or CRITICAL vulnerabilities found! ‚úÖ';
            }
            
            const body = `## üîí Security Scan Results
            
            **Docker Container Security Scan:**
            
            \`\`\`
            ${scanResults}
            \`\`\`
            
            ${scanResults.includes('Total: 0') || scanResults === 'No HIGH or CRITICAL vulnerabilities found! ‚úÖ' 
              ? '‚úÖ **Security Status: PASSED** - No critical or high-severity vulnerabilities detected in the development container.'
              : '‚ö†Ô∏è **Security Status: REVIEW NEEDED** - Please review the vulnerabilities above before merging.'
            }
            
            *This scan covers the Docker development environment to ensure secure isolated development.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
      
      - name: Fail build on critical vulnerabilities
        run: |
          # Check if there are any CRITICAL vulnerabilities
          if docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
             aquasec/trivy:latest image --severity CRITICAL --quiet averagejoeslab-security-scan | grep -q "Total:.*[1-9]"; then
            echo "‚ùå CRITICAL vulnerabilities found! Failing the build."
            exit 1
          else
            echo "‚úÖ No CRITICAL vulnerabilities found."
          fi
